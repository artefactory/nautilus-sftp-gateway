name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest, upload coverage.
      run: |
        pip install pytest-cov webtest
        cov=`pytest --cov=./src/opt/app | grep TOTAL | awk '{print $4}'`
        curl -X POST -F repo_name=${{ github.repository }} -F badge_name=coverage -F value=$cov https://vial-dot-data-sandbox-196216.appspot.com/build_badge
      env:
        PYTHONPATH: /home/runner/work/nautilus-sftp-gateway/nautilus-sftp-gateway/src/opt/app
    - name: Get pylint note
      run: |
        pip install pylint
        pl=`pylint $(pwd)/**/*.py --disable=no-member | grep "Your code has been rated at " | awk '{print $7}'`
        curl -X POST -F repo_name=${{ github.repository }} -F badge_name=pylint -F value=$pl https://vial-dot-data-sandbox-196216.appspot.com/build_badge
      env:
        PYTHONPATH: /home/runner/work/nautilus-sftp-gateway/nautilus-sftp-gateway
    - name: Get cyclomatic complexity
      run: |
        pip install radon
        rad=`radon cc --average . | tail -1 | awk '{print $3}'`
        curl -X POST -F repo_name=${{ github.repository }} -F badge_name=complexity -F value=$rad https://vial-dot-data-sandbox-196216.appspot.com/build_badge 
    - name: Get leaks from gitleaks
      run: |
        curl https://raw.githubusercontent.com/zricethezav/gitleaks/master/examples/leaky-repo.toml >> gitleaks.toml
        leaks=`docker run --rm --name gitleaks -v $(pwd):/code/ zricethezav/gitleaks --repo-path=/code/ -v --config=/code/gitleaks.toml | grep 'leaks detected' | awk '{print $2}'`
        if [[ $leaks -eq "No" ]]; then leaks="0"; fi
        rm gitleaks.toml
        curl -X POST -F repo_name=${{ github.repository }} -F badge_name=gitleaks -F value=$leaks https://vial-dot-data-sandbox-196216.appspot.com/build_badge  

